pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh '''
                docker build -t 52pbailey/task1 .
                docker build -t 52pbailey/task1-nginx nginx 
                '''
            }

        }
        stage('Push') {
            steps {
                sh '''
                docker push 52pbailey/task1
                docker push 52pbailey/task1-nginx
                '''
            }

        }
        stage('Deploy') {
            steps {
                sh '''
                ssh jenkins@paulb-deploy <<EOF

                docker pull 52pbailey/task1
                docker pull 52pbailey/task1-nginx

                docker stop flask-app-1 && echo "Stopped flask-app-1" || echo "flask-app-1 is not running"
                docker rm flask-app-1 && echo "removed flask-app-1" || echo "flask-app-1 does not exist"

                docker stop flask-app-2 && echo "Stopped flask-app-2" || echo "flask-app-2 is not running"
                docker rm flask-app-2 && echo "removed flask-app-2" || echo "flask-app-2 does not exist"

                docker stop flask-app-3 && echo "Stopped flask-app-3" || echo "flask-app-3 is not running"
                docker rm flask-app-3 && echo "removed flask-app-3" || echo "flask-app-3 does not exist"

                docker stop nginx && echo "Stopped nginx" || echo "nginx is not running"
                docker rm nginx && echo "removed nginx" || echo "nginx does not exist"

                docker network rm task1-net && echo "removed network" || echo "network already removed"
                docker network create task1-net

                docker run -d --name flask-app-1 --network task1-net 52pbailey/task1
                docker run -d --name flask-app-2 --network task1-net 52pbailey/task1
                docker run -d --name flask-app-3 --network task1-net 52pbailey/task1
                docker run -d -p 80:80 --name nginx --network task1-net 52pbailey/task1-nginx
                '''
            }

        }

    }

}